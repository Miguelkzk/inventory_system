class ArticleSale < ApplicationRecord
  ############################################################################################
  # ASSOCIATIONS
  ############################################################################################

  belongs_to :article, -> { with_deleted }
  belongs_to :sale

  ############################################################################################
  # VALIDATIONS
  ############################################################################################

  # cuando se crea una venta, hay que setear si o si estos atributos para
  # saber cuanto se vendio de cada articulo y poder reducir el stock
  # y la fecha de venta para agrupar la tabla de demanda por periodo
  validates :quantity, :sold_at, presence: true

  ############################################################################################
  # SCOPES
  ############################################################################################

  ############################################################################################
  # CALLBACKS
  ############################################################################################

  after_initialize :set_sold_at, if: :new_record?

  def set_sold_at
    self.sold_at = sale.sold_at
  end

  ############################################################################################
  # INSTANCE METHODS
  ############################################################################################

  ############################################################################################
  # CLASS METHODS
  ############################################################################################
end
